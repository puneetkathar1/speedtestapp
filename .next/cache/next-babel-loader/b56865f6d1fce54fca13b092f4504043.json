{"ast":null,"code":"import _Button from \"antd/lib/button\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _Row from \"antd/lib/row\";\nimport _Col from \"antd/lib/col\";\nimport _Input from \"antd/lib/input\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Puneet\\\\Documents\\\\trip-main\\\\components\\\\ContactForm\\\\ContactFrom.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport FormControl from '../UI/FormControl/FormControl';\n\nvar ContactForm = function ContactForm() {\n  _s();\n\n  var _errors$email, _errors$email2, _errors$phone, _errors$phone2;\n\n  var _useForm = useForm({\n    mode: 'onChange'\n  }),\n      control = _useForm.control,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit;\n\n  var onSubmit = function onSubmit(data) {\n    return console.log(data);\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(FormControl, {\n    label: \"Your message\",\n    htmlFor: \"message\",\n    error: errors.message && __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 34\n      }\n    }, \"This field is required!\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(Controller, {\n    as: __jsx(_Input.TextArea, {\n      rows: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }\n    }),\n    id: \"message\",\n    name: \"message\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  })), __jsx(_Row, {\n    gutter: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(_Col, {\n    md: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    label: \"Your email\",\n    htmlFor: \"email\",\n    error: errors.email && __jsx(React.Fragment, null, ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === 'required' && __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, \"This field is required!\"), ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === 'pattern' && __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, \"Please enter a valid email address!\")),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, __jsx(Controller, {\n    as: __jsx(_Input, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }),\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true,\n      pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }))), __jsx(_Col, {\n    md: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    label: \"Your contact number\",\n    htmlFor: \"phone\",\n    error: errors.phone && __jsx(React.Fragment, null, ((_errors$phone = errors.phone) === null || _errors$phone === void 0 ? void 0 : _errors$phone.type) === 'required' && __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \"This field is required!\"), ((_errors$phone2 = errors.phone) === null || _errors$phone2 === void 0 ? void 0 : _errors$phone2.type) === 'pattern' && __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, \"Please enter your valid number!\")),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, __jsx(Controller, {\n    as: __jsx(_Input, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }),\n    defaultValue: \"\",\n    control: control,\n    id: \"phone\",\n    name: \"phone\",\n    rules: {\n      required: true,\n      pattern: /^[0-9]*$/\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })))), __jsx(FormControl, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, __jsx(Controller, {\n    name: \"cookie\",\n    onChange: function onChange(_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n          e = _ref2[0];\n\n      return e.target.checked;\n    },\n    as: __jsx(_Checkbox, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \"Save my email in the browser fro the next time I contact\"),\n    control: control,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  })), __jsx(FormControl, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, __jsx(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n};\n\n_s(ContactForm, \"WvwSMpdjIzRpw3iCXvvZsWA4REc=\", false, function () {\n  return [useForm];\n});\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["C:/Users/Puneet/Documents/trip-main/components/ContactForm/ContactFrom.js"],"names":["React","useForm","Controller","FormControl","ContactForm","mode","control","errors","handleSubmit","onSubmit","data","console","log","message","required","email","type","pattern","phone","e","target","checked"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Input, Checkbox, Button, Row, Col } from 'antd';\nimport FormControl from '../UI/FormControl/FormControl';\n\nconst ContactForm = () => {\n  const { control, errors, handleSubmit } = useForm({\n    mode: 'onChange',\n  });\n  const onSubmit = (data) => console.log(data);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <FormControl\n        label=\"Your message\"\n        htmlFor=\"message\"\n        error={errors.message && <span>This field is required!</span>}\n      >\n        <Controller\n          as={<Input.TextArea rows={5} />}\n          id=\"message\"\n          name=\"message\"\n          defaultValue=\"\"\n          control={control}\n          rules={{ required: true }}\n        />\n      </FormControl>\n      <Row gutter={30}>\n        <Col md={12}>\n          <FormControl\n            label=\"Your email\"\n            htmlFor=\"email\"\n            error={\n              errors.email && (\n                <>\n                  {errors.email?.type === 'required' && (\n                    <span>This field is required!</span>\n                  )}\n                  {errors.email?.type === 'pattern' && (\n                    <span>Please enter a valid email address!</span>\n                  )}\n                </>\n              )\n            }\n          >\n            <Controller\n              as={<Input />}\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              defaultValue=\"\"\n              control={control}\n              rules={{\n                required: true,\n                pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n              }}\n            />\n          </FormControl>\n        </Col>\n        <Col md={12}>\n          <FormControl\n            label=\"Your contact number\"\n            htmlFor=\"phone\"\n            error={\n              errors.phone && (\n                <>\n                  {errors.phone?.type === 'required' && (\n                    <span>This field is required!</span>\n                  )}\n                  {errors.phone?.type === 'pattern' && (\n                    <span>Please enter your valid number!</span>\n                  )}\n                </>\n              )\n            }\n          >\n            <Controller\n              as={<Input />}\n              defaultValue=\"\"\n              control={control}\n              id=\"phone\"\n              name=\"phone\"\n              rules={{ required: true, pattern: /^[0-9]*$/ }}\n            />\n          </FormControl>\n        </Col>\n      </Row>\n      <FormControl>\n        <Controller\n          name=\"cookie\"\n          onChange={([e]) => {\n            return e.target.checked;\n          }}\n          as={\n            <Checkbox>\n              Save my email in the browser fro the next time I contact\n            </Checkbox>\n          }\n          control={control}\n        />\n      </FormControl>\n      <FormControl>\n        <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n          Submit\n        </Button>\n      </FormControl>\n    </form>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}